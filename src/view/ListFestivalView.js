import React, {Component} from 'react';
import {
  View
} from 'react-native';

import Spinner from 'react-native-loading-spinner-overlay';

import ListFestival from '../component/ListFestival';
import ErrorScreen from '../component/ErrorScreen';

import * as firebase from 'firebase';

import { Key } from '../config/Key';

var firebaseApp = firebase.initializeApp(Key.keys);

/* 
    --- Key.keys generated by Firebase (./src/config/config.js) ---
    export class Key {
      static keys = {
        apiKey: "API_KEY",
        authDomain: "AUTH_DOMAIN",
        databaseURL: "DATABASE_URL",
        storageBucket: "STORAGE_BUCKET"
      }
    }
*/

export default class ListFestivalView extends Component {

  constructor(props) {
    super(props);

    this.state = {
      loading: true,
      visible: false,
      network: true
    };

    this.itemsRef = firebaseApp.database().ref();
  }

  componentDidMount() {
    this.setState({
      visible: !this.state.visible
    });
    this.listenForItems(this.itemsRef);
  }


  listenForItems(itemsRef) {
    itemsRef.on('value', (snap) => {

      var items = [];
      snap.forEach((child) => {
        items.push({
          data: child.val()
        });
      });

      this.setState({
        loading: false,
        dataSource: items
      });
    });
  }
  render() {
    if (this.state.loading) {
      return (
        <View style={{flex: 1}}>
          <Spinner visible={this.state.visible}/>
        </View>
      );
    }
    else if ((!this.state.loading) && (!this.state.network)) {
      return (
        <ErrorScreen />
      );
    }
    else {
      return (
        <ListFestival data={this.state.dataSource[0].data} navigator={this.props.navigator}/>
      );
    }
  }
}